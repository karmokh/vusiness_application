import React from 'react';
import {Dimensions, TouchableOpacity} from 'react-native';
import color from "../../constants/Colors";

export default function MyButton(props) {
    const {width, height} = Dimensions.get('window');
    return (
        <TouchableOpacity {...props} style={
            [
                {fontFamily: 'iran-sans'},
                props.style,
                props.hidden ? {display: 'none'} : '',
                props.absolute ? {position: 'absolute'} : '',
                props.relative ? {position: 'relative'} : '',
                props.overflow ? {overflow: props.overflow} : '',
                props.opacity ? {opacity: props.opacity} : '',
                props.rtl ? {direction: 'rtl'} : '',
                props.ltr ? {direction: 'ltr'} : '',
                props.flex ? {flex: props.flex == true ? 1 : props.flex} : '',
                props.wrap ? {flexWrap: 'wrap'} : '',
                props.nowrap ? {flexWrap: 'nowrap'} : '',
                props.row ? {flexDirection: 'row'} : '',
                props.rowRev ? {flexDirection: 'row-reverse'} : '',
                props.col ? {flexDirection: 'column'} : '',
                props.colRev ? {flexDirection: 'column-reverse'} : '',
                props.flexStart ? {justifyContents: 'flex-start'} : '',
                props.flexEnd ? {justifyContents: 'flex-end'} : '',
                props.flexCenter ? {justifyContents: 'center'} : '',
                props.spaceBetween ? {justifyContents: 'space-between'} : '',
                props.spaceAround ? {justifyContents: 'space-around'} : '',
                props.spaceEvenly ? {justifyContents: 'space-evenly'} : '',
                props.aiFlexStart ? {alignItems: 'flex-start'} : '',
                props.aiFlexEnd ? {alignItems: 'flex-end'} : '',
                props.aiCenter ? {alignItems: 'center'} : '',
                props.aiBaseLine ? {alignItems: 'baseline'} : '',
                props.aiStretch ? {alignItems: 'stretch'} : '',
                props.asFlexStart ? {alignSelf: 'flex-start'} : '',
                props.asFlexEnd ? {alignSelf: 'flex-end'} : '',
                props.asCenter ? {alignSelf: 'center'} : '',
                props.asBaseLine ? {alignSelf: 'baseline'} : '',
                props.asStretch ? {alignSelf: 'stretch'} : '',
                props.acFlexStart ? {alignContent: 'flex-start'} : '',
                props.acFlexEnd ? {alignContent: 'flex-end'} : '',
                props.acCenter ? {alignContent: 'center'} : '',
                props.acStretch ? {alignContent: 'stretch'} : '',
                props.acSpaceBetween ? {alignContent: 'space-between'} : '',
                props.acSpaceAround ? {alignContent: 'space-around'} : '',
                props.center ? {justifyContent: 'center', alignItems: 'center'} : '',
                props.top ? {top: props.top} : '',
                props.right ? {right: props.right} : '',
                props.left ? {left: props.left} : '',
                props.bottom ? {bottom: props.bottom} : '',
                props.m ? {margin: props.m} : '',
                props.mh ? {marginHorizontal: props.mh} : '',
                props.mv ? {marginVertical: props.mv} : '',
                props.ms ? {marginStart: props.ms} : '',
                props.me ? {marginEnd: props.me} : '',
                props.mt ? {marginTop: props.mt} : '',
                props.mr ? {marginRight: props.mr} : '',
                props.ml ? {marginLeft: props.ml} : '',
                props.mb ? {marginBottom: props.mb} : '',
                props.p ? {padding: props.p} : '',
                props.ph ? {paddingHorizontal: props.ph} : '',
                props.pv ? {paddingVertical: props.pv} : '',
                props.ps ? {paddingStart: props.ps} : '',
                props.pe ? {paddingEnd: props.pe} : '',
                props.pt ? {paddingTop: props.pt} : '',
                props.pr ? {paddingRight: props.pr} : '',
                props.pl ? {paddingLeft: props.pl} : '',
                props.pb ? {paddingBottom: props.pb} : '',
                props.h ? {height: (props.h == 'full' ? height : (props.h >= 0 ? props.h : height + props.h))} : '',
                props.hMin ? {minHeight: (props.hMin == 'full' ? height : (props.hMin >= 0 ? props.hMin : height + props.hMin))} : '',
                props.hMax ? {maxHeight: (props.hMax == 'full' ? height : (props.hMax >= 0 ? props.hMax : height + props.hMax))} : '',
                props.w ? {width: (props.w == 'full' ? width : (props.w >= 0 ? props.w : width + props.w))} : '',
                props.wMin ? {minWidth: (props.wMin == 'full' ? width : (props.wMin >= 0 ? props.wMin : width + props.wMin))} : '',
                props.wMax ? {maxWidth: (props.wMax == 'full' ? width : (props.wMax >= 0 ? props.wMax : width + props.wMax))} : '',
                props.rounded ? {borderRadius: props.rounded == true ? 5 : props.rounded} : '',
                props.circle ? {borderRadius: 1000} : '',
                props.color ? {color: props.color} : '',
                props.bg ? {backgroundColor: props.bg} : '',
                props.z ? {zIndex: props.z} : '',

                props.b ? {borderWidth: props.b} : '',
                props.bColor ? {borderColor: props.bColor} : '',
                props.bt ? {borderTopWidth: props.bt} : '',
                props.btColor ? {borderTopColor: props.btColor} : '',
                props.br ? {borderRightWidth: props.br} : '',
                props.brColor ? {borderRightColor: props.brColor} : '',
                props.bl ? {borderLeftWidth: props.bl} : '',
                props.blColor ? {borderLeftColor: props.blColor} : '',
                props.bb ? {borderBottomWidth: props.bb} : '',
                props.bbColor ? {borderBottomColor: props.bbColor} : '',
                props.bs ? {borderStartWidth: props.bs} : '',
                props.bsColor ? {borderStartColor: props.bsColor} : '',
                props.be ? {borderEndWidth: props.be} : '',
                props.beColor ? {borderEndColor: props.beColor} : '',
                props.bRadius ? {borderRadius: props.bRadius} : '',
                props.btsRadius ? {borderTopStartRadius: props.btsRadius} : '',
                props.bteRadius ? {borderTopEndRadius: props.bteRadius} : '',
                props.btrRadius ? {borderTopRightRadius: props.btrRadius} : '',
                props.btlRadius ? {borderTopLeftRadius: props.btlRadius} : '',
                props.bbsRadius ? {borderBottomStartRadius: props.bbsRadius} : '',
                props.bbeRadius ? {borderBottomEndRadius: props.bbeRadius} : '',
                props.bbrRadius ? {borderBottomRightRadius: props.bbrRadius} : '',
                props.bblRadius ? {borderBottomLeftRadius: props.bblRadius} : '',
                props.borderDashed ? {borderStyle: 'dashed'} : '',
                props.borderDotted ? {borderStyle: 'dotted'} : '',

                props.textRight ? {textAlign: 'right'} : '',
                props.textLeft ? {textAlign: 'left'} : '',
                props.textCenter ? {textAlign: 'center'} : '',
                props.textJustify ? {textAlign: 'justify'} : '',
                props.bold ? {fontWeight: 'bold'} : '',
                props.italic ? {fontStyle: 'italic'} : '',
                props.upper ? {textTransform: 'uppercase'} : '',
                props.lower ? {textTransform: 'lowercase'} : '',
                props.capital ? {textTransform: 'capitalize'} : '',
                props.underline ? {textDecorationLine: 'underline'} : '',
                props.lineThrough ? {textDecorationLine: 'line-through'} : '',
                props.size ? {fontSize: props.size} : '',
                props.lineHeight ? {lineHeight: props.lineHeight} : '',
                props.h1 ? {fontSize: 48} : '',
                props.h2 ? {fontSize: 36} : '',
                props.h3 ? {fontSize: 24} : '',
                props.h4 ? {fontSize: 20} : '',
                props.h5 ? {fontSize: 16} : '',
                props.h6 ? {fontSize: 12} : '',
                props.shadow ? {
                    borderWidth: 1,
                    borderColor: color.light
                    // shadowColor: props.shadowColor ?? '#999',
                    // shadowOffset: {
                    //     width: 0,
                    //     height: 2,
                    // },
                    // shadowOpacity: 0.25,
                    // shadowRadius: 3.84,
                    // elevation: 20,
                } : '',
            ]
        }/>
    );
}
